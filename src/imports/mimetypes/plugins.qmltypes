import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.

Module {
    Component {
        name: "QDeclarativeMimeDatabase"
        prototype: "QObject"
        exports: ["MimeDatabase 1.0"]
        Property { name: "mimeTypeNames"; type: "QVariantList"; isReadonly: true }
        Method {
            name: "mimeTypeForName"
            type: "QDeclarativeMimeType*"
            Parameter { name: "nameOrAlias"; type: "string" }
        }
        Method {
            name: "mimeTypeForFileName"
            type: "QDeclarativeMimeType*"
            Parameter { name: "fileName"; type: "string" }
        }
        Method {
            name: "mimeTypeForFile"
            type: "QDeclarativeMimeType*"
            Parameter { name: "fileName"; type: "string" }
        }
    }
    Component {
        name: "QDeclarativeMimeType"
        prototype: "QObject"
        exports: ["MimeType 1.0"]
        Property { name: "name"; type: "string" }
        Property { name: "genericIconName"; type: "string" }
        Property { name: "iconName"; type: "string" }
        Property { name: "globPatterns"; type: "QVariantList" }
        Property { name: "suffixes"; type: "QVariantList"; isReadonly: true }
        Property { name: "preferredSuffix"; type: "string"; isReadonly: true }
        Property { name: "isValid"; type: "bool"; isReadonly: true }
        Method {
            name: "assign"
            Parameter { name: "other"; type: "QDeclarativeMimeType"; isPointer: true }
        }
        Method {
            name: "equals"
            type: "bool"
            Parameter { name: "other"; type: "QDeclarativeMimeType"; isPointer: true }
        }
        Method { name: "properties"; type: "QVariantMap" }
        Method {
            name: "assignProperties"
            Parameter { name: "other"; type: "QVariantMap" }
        }
        Method {
            name: "equalsProperties"
            type: "bool"
            Parameter { name: "other"; type: "QVariantMap" }
        }
    }
}
